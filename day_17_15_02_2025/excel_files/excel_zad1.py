# -*- coding: utf-8 -*-
"""excel_zad1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19ezxRmSIObRx5J8JHAa35V3ruC5McgMu

Zadania z pracy z Excelem
<h1>TST</h1>
"""

print("Radek")

a = 100

a

from openpyxl import Workbook
wb = Workbook()

ws = wb.active
ws['A1'] = 42
ws.append([1, 2, 3])

import datetime

ws['A3'] = datetime.datetime.now()
wb.save("sample.xlsx")

from google.colab import drive
drive.mount('/content/drive')

"""wczytanie pliku excel"""

import openpyxl

wb = openpyxl.load_workbook('videogamesales.xlsx')

wb

"""ctrl shift enter - uruchomienie kodu w komórce"""

ws = wb.active

ws

ws = wb['vgsales']

print('Total number of rows: ' + str(ws.max_row) + ' Total number of columns: ' + str(ws.max_column))

print('The value in cell A1 is: ' + ws['A1'].value)

values = [ws.cell(row=1, column=i).value for i in range(1, ws.max_column + 1)]
print(values)

data = [ws.cell(row=i, column=2).value for i in range(2, 12)]
print(data)

"""

```
Wii Sports
Super Mario Bros.
Mario Kart Wii
Wii Sports Resort
Pokemon Red/Pokemon Blue
Tetris
New Super Mario Bros.
Wii Play
New Super Mario Bros. Wii
Duck Hunt

```

"""

my_list = list()

for value in ws.iter_rows(
    min_row=1, max_row=11, min_col=1, max_col=6,
    values_only=True):
    my_list.append(value)

print(my_list)
for ele1, ele2, ele3, ele4, ele5, ele6 in my_list:
    print(f"{ele1:<8}{ele2:<35}{ele3:<10}{ele4:<10}{ele5:<15}{ele6:<15}")

ws['K1'] = "Sum of Sales"

ws['K1'].value

ws.cell(row=1, column=11, value="Sum of Sales")

print(ws.cell(row=1, column=11).value)

ws['K1'].value

wb.save('videogamesales.xlsx')

"""Dodanie kolumny - suma sprzedazy"""

row_position = 2
col_position = 7

total_sales = ((ws.cell(row=row_position, column=col_position).value) +
              (ws.cell(row=row_position, column=col_position+1).value) +
               (ws.cell(row=row_position, column=col_position+2).value) +
               (ws.cell(row=row_position, column=col_position+3).value))

ws.cell(row=2, column=11).value = total_sales
wb.save('videogamesales.xlsx')

row_position = 1
for i in range(1, ws.max_row):

    row_position += 1
    NA_Sales = ws.cell(row=row_position, column=7).value
    EU_Sales = ws.cell(row=row_position, column=8).value
    JP_Sales = ws.cell(row=row_position, column=9).value
    Other_Sales = ws.cell(row=row_position, column=10).value

    total_sales = (NA_Sales + EU_Sales + JP_Sales + Other_Sales)
    ws.cell(row=row_position, column=11).value = total_sales


wb.save('videogamesales.xlsx')

"""dodanie wiersza"""

new_row = (1, 'The Legend of Zelda', 1986, 'Action', 'Nintendo', 3.74, 0.93, 1.69, 0.14, 6.51, 6.5)
ws.append(new_row)

wb.save('videogamesales.xlsx')

values = [ws.cell(row=ws.max_row, column=i).value for i in range(1, ws.max_column+1)]
print(values)

"""Usunięcie wiersza"""

ws.delete_rows(ws.max_row, 1)
wb.save('videogamesales.xlsx')

"""AVERAGE - obliczenie średniej"""

ws['P1'] = "Average Sales"
ws['P2'] = '= AVERAGE(K2:K16220)'

wb.save('videogamesales.xlsx')

"""COUNTA - zlicza komórki (niepuste)"""

ws['Q1'] = "Number of Populated Cells"
ws['Q2'] = '=COUNTA(E2:E16220)'

wb.save('videogamesales.xlsx')

"""COUNTIF - liczy spełniające warunek"""

ws['R1'] = "Number of Rows with Sports Genre"
ws['R2'] = '=COUNTIF(E2:E16220, "Sports")'

wb.save('videogamesales.xlsx')

"""SUMIF - sumuje spełniające warunek"""

ws['S1'] = 'Total Sports Sales'
ws['S2'] = '=SUMIF(E2:E16220, "Sports", K2:K16620)'

wb.save('videogamesales.xlsx')

"""CEILING - zaokraglenie"""

ws['T1'] = "Rounded Sum of Sports Sales"
ws['T2'] = '=CEILING(S2,25)'

wb.save('videogamesales.xlsx')

print(ws.title)

ws.title = 'Video Games Sales Data'
wb.save('videogamesales.xlsx')

print(wb.sheetnames)

"""dodanie arkusza"""

wb.create_sheet('Empty Sheet')
print(wb.sheetnames)

wb.save('videogamesales.xlsx')

"""usunięcie arkusza"""

wb.remove(wb['Empty Sheet'])
print(wb.sheetnames)

wb.save('videogamesales.xlsx')

"""Powielenie arkusza"""

wb.copy_worksheet(wb['Video Games Sales Data'])
wb.save('vgsales_2.xlsx')

ws = wb['Total Sales by Genre']

"""wykres słupkowy"""

from openpyxl.chart import Reference

values = Reference(ws,
                   min_col=2,
                   max_col=2,
                   min_row=1,
                   max_row=13)

cats = Reference(ws,
                 min_col=1,
                 max_col=1,
                 min_row=2,
                 max_row=13)

from openpyxl.chart import BarChart
chart = BarChart()
chart.add_data(values, titles_from_data=True)
chart.set_categories(cats)

chart.title = "Total Sales"
chart.x_axis.title = "Genre"
chart.y_axis.title = "Total Sales by Genre"

ws.add_chart(chart, "D2")

wb.save("videogamesales.xlsx")

ws = wb['Breakdown of Sales by Genre']
values = Reference(ws,
                   min_col=2,
                   max_col=5,
                   min_row=1,
                   max_row=13)

cats = Reference(ws,
                 min_col=1,
                 max_col=1,
                 min_row=2,
                 max_row=13)

chart = BarChart()
chart.add_data(values, titles_from_data=True)
chart.set_categories(cats)

chart.title = "Sales Braekdown"
chart.x_axis.title = "Genre"
chart.y_axis.title = "Brakdown of Sales by Genre"

ws.add_chart(chart, "H2")

wb.save("videogamesales.xlsx")

"""Wykres liniowy"""

values = Reference(ws,
                   min_col=2,
                   max_col=6,
                   min_row=1,
                   max_row=40)

cats = Reference(ws, min_col=1, max_col=1, min_row=2, max_row=40)

from openpyxl.chart import LineChart

chart = LineChart()
chart.add_data(values, titles_from_data=True)
chart.set_categories(cats)

chart.title = "Total Sales"
chart.x_axis.title = "Year"
chart.y_axis.title = "Total Sales by  Year"

ws.add_chart(chart, "H2")

wb.save("videogamesales.xlsx")

from openpyxl.styles import Font

ws = wb['Video Games Sales Data']
ws['A1'].font = Font(bold=True, size=12)

wb.save("videogamesales.xlsx")

for cell in ws["1:1"]:
    cell.font = Font(bold=True, size=12)

wb.save("videogamesales.xlsx")

from openpyxl.styles import colors

ws['A1'].font = Font(color='FF0000', bold=True, size=12)  # red
ws['A2'].font = Font(color='0000FF') # blue

wb.save("videogamesales.xlsx")

# zmiana koloru tła w komórce
from openpyxl.styles import PatternFill

ws['A1'].fill = PatternFill('solid', start_color="38e3ff")

wb.save("videogamesales.xlsx")

from openpyxl.styles import Border, Side
my_border = Side(border_style='thin', color="000000")

ws['A1'].border = Border(
    top=my_border, left=my_border, right=my_border, bottom=my_border
)

wb.save("videogamesales.xlsx")

from openpyxl.formatting.rule import CellIsRule

fill = PatternFill(
    start_color='90EE90',
    end_color='90EE90', fill_type='solid')

ws.conditional_formatting.add(
    'G2:K16594', CellIsRule(operator='greaterThan', formula=[8], fill=fill))

wb.save("videogamesales.xlsx")